/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
        DMux8Way(in=load , sel=address[0..2] , a=i1 , b=i2 , c=i3 , d=i4 , e=i5 , f=i6 , g=i7 , h=i8);
        RAM8(in=in , load=i1 , address=address[3..5] , out=o1);
        RAM8(in=in , load=i2 , address=address[3..5] , out=o2);
        RAM8(in=in , load=i3 , address=address[3..5] , out=o3);
        RAM8(in=in , load=i4 , address=address[3..5] , out=o4);
        RAM8(in=in , load=i5 , address=address[3..5] , out=o5);
        RAM8(in=in , load=i6 , address=address[3..5] , out=o6);
        RAM8(in=in , load=i7 , address=address[3..5] , out=o7);
        RAM8(in=in , load=i8 , address=address[3..5] , out=o8);
        Mux8Way16(a=o1 , b=o2 , c=o3 , d=o4 , e=o5 , f=o6 , g=o7 , h=o8 , sel=address[0..2] , out=out );
}
